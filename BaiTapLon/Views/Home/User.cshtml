@model BaiTapLon.Models.nguoidung

@{
    ViewBag.Title = "Người Dùng";
}

<h2 class="text-center mt-4">Người Dùng</h2>

@using (Html.BeginForm("User", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal container mt-4 p-4 border rounded bg-light shadow-sm">
        <h4 class="text-primary mb-4">Thông Tin Người Dùng</h4>
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
        @Html.HiddenFor(model => model.email)

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.TenND, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
            <div class="col-md-10 input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-user"></i></span>
                </div>
                @Html.EditorFor(model => model.TenND, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenND, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @* @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })*@
            @* <div class="col-md-10 input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i class="fas fa-image"></i></span>
                    </div>
                    @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })



                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="Image" id="Image" style="width: 100%" onchange="displayImage(this)" />
                    <img id="previewImage" src="@Url.Content("~/assets/images/" + Model.Avatar)" alt="Product Image" style="width: 100px; border-radius: 70%; " />
                    @*@Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })*@
                </div>

            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.Tuoi, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
            <div class="col-md-10 input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                </div>
                @Html.EditorFor(model => model.Tuoi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tuoi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.SDT, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
            <div class="col-md-10 input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-phone"></i></span>
                </div>
                @Html.EditorFor(model => model.SDT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
            <div class="col-md-10 input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                </div>
                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mt-4">
            <div class="col-md-10 offset-md-2">
                <input type="submit" value="Save" class="btn btn-default" />
                @*<i class="btn btn-default"></i> Lưu*@

                <button type="button" name="action" value="Logout" class="btn btn-secondary" onclick="confirmLogout()">
                    <i class="fas fa-sign-out-alt"></i> Đăng Xuất
                </button>
            </div>
        </div>
    </div>
}

<div class="container mt-4">
    @Html.ActionLink("Backlist", "Index", null, new { @class = "btn btn-link" })
</div>

@section Scripts {
    <script>
        function confirmLogout() {
            if (confirm("Bạn có chắc chắn muốn đăng xuất không?")) {
                window.location.href = '@Url.Action("Index", "Home")';
            }
        }
    </script>
 
     @Scripts.Render("~/bundles/jqueryval")
        <script>
            function displayImage(input) {
                var previewImage = document.getElementById('previewImage');

                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        previewImage.src = e.target.result;
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }
        </script>
    }
